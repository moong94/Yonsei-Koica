<?php if (!defined('_GNUBOARD_')) exit; ?>

a:3:{s:4:"time";i:1617072407;s:3:"ttl";i:10800;s:4:"data";a:12:{s:5:"co_id";s:7:"sinchon";s:7:"co_html";s:1:"1";s:10:"co_subject";s:21:"Yonsei Sinchon Campus";s:10:"co_content";s:4349:"<p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">■</span><span lang="EN-US"> History of Yonsei (1885~ ) <o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">The history of Yonsei University began on
April 10th, 1885, as Korea’s first modern hospital "Gwanghyewon."
Since then, works related to medicine were institutionalized to become what was
initially the Severance Medical College and later Severance Hospital and
Severance Medical School. Meanwhile, in education, what was initially known as
Underwood School, Gyeongsin School, and later Yonhi College became Yonhee
University. Yonhee and Severance supported the independence and modernization
of Korea during Japanese colonization and at times of crises. As a university,
it also bore the responsibility to democratize and modernize the country after
the Korean War.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">&nbsp;</span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">In 1957, Yonhee University and Severance
Medical School merged to become Yonsei University. After the merging, Yonsei
University grew to become one of the best universities in Korea. It became the
driving force behind Korea’s economic and political growth, and it also
continues to spearhead university education and research.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">This Yonsei spirit and academic tradition
also took roots in Wonju. First opened as the Wonju Campus Medical School in
1978, it expanded to establish itself as a university, and it grew into one of
Gangwon region’s leading campuses since moving to Maeji-ri in 1984.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">The opening of an international campus in
Songdo, Incheon, in 2010 was the first step for Yonsei University to become a
world-class education and research powerhouse. Through decentralization and
collaboration among its campuses (Sinchon, Health System, Wonju,
International), Yonsei is committed to contributing to the development of
mankind and society by leading creative changes and to build a new history.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">&nbsp;</span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">■</span><span lang="EN-US"> About Department of Public Administration <o:p></o:p></span></p><p>















<span lang="EN-US" style="font-size: 10pt; font-family: &quot;맑은 고딕&quot;;">Established in 1958, the Department of Public
Administration at Yonsei University pioneered the Public Administration program
in South Korea and has since become a center for academic research and
education in the field. The Department offers both undergraduate (BA) and
graduate (MA and Ph.D.) programs in Public Administration and ranks as one of
the top programs in the nation with 17 standing faculty members whose
cutting-edge research is internationally recognized. Our alumni, a total of
approximately 4,000 bachelors, 420 masters, and 110 Ph.Ds, play leading roles
in government, finance, public and private corporations, academia, media, and
NGOs. The Department takes pride in its tradition of more than sixty years for
its contribution to Korean society and now aims for global excellence in
research and education.</span>&nbsp;</p>";s:12:"co_seo_title";s:21:"yonsei-sinchon-campus";s:17:"co_mobile_content";s:4349:"<p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">■</span><span lang="EN-US"> History of Yonsei (1885~ ) <o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">The history of Yonsei University began on
April 10th, 1885, as Korea’s first modern hospital "Gwanghyewon."
Since then, works related to medicine were institutionalized to become what was
initially the Severance Medical College and later Severance Hospital and
Severance Medical School. Meanwhile, in education, what was initially known as
Underwood School, Gyeongsin School, and later Yonhi College became Yonhee
University. Yonhee and Severance supported the independence and modernization
of Korea during Japanese colonization and at times of crises. As a university,
it also bore the responsibility to democratize and modernize the country after
the Korean War.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">&nbsp;</span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">In 1957, Yonhee University and Severance
Medical School merged to become Yonsei University. After the merging, Yonsei
University grew to become one of the best universities in Korea. It became the
driving force behind Korea’s economic and political growth, and it also
continues to spearhead university education and research.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">This Yonsei spirit and academic tradition
also took roots in Wonju. First opened as the Wonju Campus Medical School in
1978, it expanded to establish itself as a university, and it grew into one of
Gangwon region’s leading campuses since moving to Maeji-ri in 1984.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">The opening of an international campus in
Songdo, Incheon, in 2010 was the first step for Yonsei University to become a
world-class education and research powerhouse. Through decentralization and
collaboration among its campuses (Sinchon, Health System, Wonju,
International), Yonsei is committed to contributing to the development of
mankind and society by leading creative changes and to build a new history.<o:p></o:p></span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US">&nbsp;</span></p><p class="" style="margin: 0cm 0cm 8pt; text-align: justify; line-height: 107%; font-size: 10pt; font-family: &quot;맑은 고딕&quot;;"><span lang="EN-US" style="font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">■</span><span lang="EN-US"> About Department of Public Administration <o:p></o:p></span></p><p>















<span lang="EN-US" style="font-size: 10pt; font-family: &quot;맑은 고딕&quot;;">Established in 1958, the Department of Public
Administration at Yonsei University pioneered the Public Administration program
in South Korea and has since become a center for academic research and
education in the field. The Department offers both undergraduate (BA) and
graduate (MA and Ph.D.) programs in Public Administration and ranks as one of
the top programs in the nation with 17 standing faculty members whose
cutting-edge research is internationally recognized. Our alumni, a total of
approximately 4,000 bachelors, 420 masters, and 110 Ph.Ds, play leading roles
in government, finance, public and private corporations, academia, media, and
NGOs. The Department takes pride in its tradition of more than sixty years for
its contribution to Korean society and now aims for global excellence in
research and education.</span>&nbsp;</p>";s:7:"co_skin";s:11:"theme/basic";s:14:"co_mobile_skin";s:11:"theme/basic";s:17:"co_tag_filter_use";s:1:"1";s:6:"co_hit";s:1:"0";s:15:"co_include_head";s:0:"";s:15:"co_include_tail";s:0:"";}}